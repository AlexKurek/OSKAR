image: fdulwich/oskar-ci:cuda-11-3

stages:
  - test
  - publish

unit-tests:
  stage: test
  tags: [k8srunner-gpu]
  before_script:
    - nvidia-smi
    - mkdir build && cd build
    # todo: replace arch value with project variable
    - cmake .. -DCUDA_ARCH=6.1
    - make -j
  script:
    - ctest --output-on-failure

doc-pdf:
  stage: publish
  image: ubuntu:18.04 # Use Doxygen version 1.8.13 for compatibility.
  before_script:
    - >
      apt-get update && DEBIAN_FRONTEND=noninteractive
      apt-get -qq install build-essential cmake doxygen doxygen-latex texlive
    - mkdir build && cd build
    - cmake ..
  script:
    - make doc_single
  artifacts:
    paths:
      - build/doc/*.pdf
    expire_in: 1 week
#  rules:
#    - if: '$CI_COMMIT_TAG'

docker_release:
  stage: publish
  image: docker:20.10.7
  services:
    - docker:20.10.7-dind
  variables:
    GIT_VERSION: $CI_COMMIT_SHORT_SHA
  before_script:
    - apk add make git
    - cd docker
    - echo $CAR_OCI_REGISTRY_USERNAME
    - echo $CI_COMMIT_TAG
    - echo $CAR_OCI_REGISTRY_PASSWORD | docker login --username $CAR_OCI_REGISTRY_USERNAME --password-stdin $CAR_OCI_REGISTRY_HOST
  script:
    - docker build -t artefact.skao.int/oskar-base-dep oskar-base-dep/    
    - docker build -t artefact.skao.int/oskar-base -t artefact.skao.int/oskar-base:$CI_COMMIT_TAG oskar-base/
    - docker build -t artefact.skao.int/oskar-python3 -t artefact.skao.int/oskar-python3:$CI_COMMIT_TAG oskar-python3/
    - docker push artefact.skao.int/oskar-python3:$CI_COMMIT_TAG
  rules:
    - if: '$CI_COMMIT_TAG'

