File: src/cuda/readme
===============================================================================

Description:
===============================================================================
This folder contains source code for the library module: oskar_cuda
This library provides math routines written in CUDA for execution on the GPU.


Library dependencies:
    cuda
    cudart
    cublas



Source code naming conventions:
================================================================================
Source code consists of C-callable CUDA routines and CUDA kernels. C-callable
functions can be found in the top level of the src/cuda directory and CUDA
kernels are found in the kernels directory.

cuda/
-------------------------------------------------------------------------------
oskar_cuda_as2hi        : antenna signal 2D horizontal isotropic
oskar_cuda_bf2hig       : beamformer 2D horizontal isotropic geometric
oskar_cuda_bfmv         : beamformer matrix vector
oskar_cuda_bp2hig       : beam pattern 2D horizontal isotropic geometric
oskar_cuda_bp2hcgg      : beam pattern 2D horizontal common gaussian geometric
oskar_cuda_bp2hugg      : beam pattern 2D horizontal unique gaussian geometric
oskar_cuda_im2dft       : imager 2D DFT


cuda/kernels/
-------------------------------------------------------------------------------
oskar_cudak_as2hi       : antenna signal 2D horizontal isotropic
oskar_cudak_bp2hiw      : beam pattern 2D horizontal isotropic weights
oskar_cudak_eq2hg       : equatorial to horizontal generic
oskar_cudak_im2dft      : imager 2D DFT
oskar_cudak_pc2ht       : pre-compute 2D horizontal trig
oskar_cudak_wt2hg       : weights 2D horizontal geometric



================================================================================
================================================================================
================================================================================

Testing and refactor.
---------------------

Aims:
--------------------------------------------------------------------------------
- Improvements in clarity to find things:
    - Group code into subfolders for utility, imaging, simulation?
    - Remove redundant functions.

- Improve testing.
    - need both correctness and performance.
    - Test level one funtions i.e. weights generation etc.

- Sort out handling of cuda errors more strictly.
    - needed for error codes in matlab.
    - needed for deployment so unexpected errors do not occur.

- Improve deployment support for the library work out fully how a deplyed
version of the library can be used from matlab.

- Split into a clear level 1 and level 2 functions.
    - Level 1 functions (pretty much kernels) should be exposed by wrappers.
        - scale array etc.
    - Level 2 should reuse a lot more level 1.
    - Better support of switching from double to single precision.


-----------------------------------------------------

- Beam pattern E jones calculation is a level 2 function.
    - Uses functions:
        - Weights generation
        - Some form of appodisation
        - ....
    - Therefore interface should be ...





2d Beam pattern wrapper functions under review
==============================================
bp2hcggu  = horizontal, antenna pattern = common gaussian, geometric, un-normalised
bp2higau  = horizontal, isotropic, geometric weights, apodisation, un-normalised.
bp2higu   = horizontal, antenna pattern = sin, geometric weights, unnormalised.
bp2hsgu   = horizontal, antenna pattern = sin, geometric weights, unnormalised.
bp2hssgu  = horizontal, antenna pattern = sin^2, geometric weights, un-normalised.
bp2huggu  = horizontal, antenna pattern = unique gaussian per antenna, geometric weights, un-normalised.


Proposals
=========
1. Removed normalised version : (removes 10 functions)
Un-normalised versions can be very simply normalised outside the function either
on the host code or using a gpu call to some scaling function (probably blas).

2.


removed functions:

wrappers:
bp2hcgg   = horizontal, antenna pattern = common gaussian, geometric, normalised
bp2hig    = horizontal, antenna pattern = sin, geometric weights, normalised.
bp2hsg    = horizontal, antenna pattern = sin, geometric weights, normalised.
bp2hugg   = horizontal, antenna pattern = unique gaussian per antenna, geometric weights, normalised.
bp2hssg   = horizontal, antenna pattern = sin^2, geometric weights.

kernels:
oskar_cudak_wt2hg



TODO:
=====
check normalisation on hierarchical bp ...hbp2.... file. UNNORMALISED VERSIONS
